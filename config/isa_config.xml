<?xml version="1.0"?>
<isa>
<instruction Op_Code="-" Type="R" Hex_Representation="0x01"></instruction>
<instruction Op_Code="%" Type="R" Hex_Representation="0x02"></instruction>
<instruction Op_Code="&amp;" Type="R" Hex_Representation="0x03"></instruction>
<instruction Op_Code="&amp;&amp;" Type="R" Hex_Representation="0x04"></instruction>
<instruction Op_Code="(%)" Type="R" Hex_Representation="0x05"></instruction>
<instruction Op_Code="(-)" Type="R" Hex_Representation="0x06"></instruction>
<instruction Op_Code="-(-)" Type="R" Hex_Representation="0x07"></instruction>
<instruction Op_Code="(*)" Type="R" Hex_Representation="0x08"></instruction>
<instruction Op_Code="(/)" Type="I" Hex_Representation="0x09"></instruction>
<instruction Op_Code="(+)" Type="I" Hex_Representation="0x0A"></instruction>
<instruction Op_Code="(&lt;-)" Type="I" Hex_Representation="0x0B"></instruction>
<instruction Op_Code="*" Type="R" Hex_Representation="0x0C"></instruction>
<instruction Op_Code="*(-)" Type="R" Hex_Representation="0x0D"></instruction>
<instruction Op_Code="/" Type="R" Hex_Representation="0x0E"></instruction>
<instruction Op_Code="/(-)" Type="R" Hex_Representation="0x0F"></instruction>
<instruction Op_Code="^&amp;" Type="R" Hex_Representation="0x10"></instruction>
<instruction Op_Code="^&amp;&amp;" Type="R" Hex_Representation="0x11"></instruction>
<instruction Op_Code="^|" Type="R" Hex_Representation="0x12"></instruction>
<instruction Op_Code="^||" Type="R" Hex_Representation="0x13"></instruction>
<instruction Op_Code="|" Type="R" Hex_Representation="0x14"></instruction>
<instruction Op_Code="||" Type="R" Hex_Representation="0x15"></instruction>
<instruction Op_Code="+" Type="R" Hex_Representation="0x16"></instruction>
<instruction Op_Code="+(-)" Type="R" Hex_Representation="0x17"></instruction>
<instruction Op_Code="&lt;-" Type="I" Hex_Representation="0x18"></instruction>
<instruction Op_Code="&lt;" Type="R" Hex_Representation="0x19"></instruction>
<instruction Op_Code="&lt;&lt;" Type="R" Hex_Representation="0x1A"></instruction>
<instruction Op_Code="&lt;=" Type="R" Hex_Representation="0x1B"></instruction>
<instruction Op_Code="==" Type="R" Hex_Representation="0x1C"></instruction>
<instruction Op_Code="&gt;" Type="R" Hex_Representation="0x1D"></instruction>
<instruction Op_Code="&gt;=" Type="R" Hex_Representation="0x1E"></instruction>
<instruction Op_Code="&gt;&gt;" Type="R" Hex_Representation="0x1F"></instruction>
<instruction Op_Code="break" Type="J" Hex_Representation="0x20"></instruction>
<instruction Op_Code="call" Type="J" Hex_Representation="0x21"></instruction>
<instruction Op_Code="catch" Type="J" Hex_Representation="0x22"></instruction>
<instruction Op_Code="copy" Type="I" Hex_Representation="0x23"></instruction>
<instruction Op_Code="copy_array" Type="R" Hex_Representation="0x24"></instruction>
<instruction Op_Code="for" Type="R" Hex_Representation="0x25"></instruction>
<instruction Op_Code="go_to_address" Type="J" Hex_Representation="0x26"></instruction>
<instruction Op_Code="go_to_register" Type="J" Hex_Representation="0x27"></instruction>
<instruction Op_Code="Loadnull" Type="I" Hex_Representation="0x28"></instruction>
<instruction Op_Code="move" Type="J" Hex_Representation="0x29"></instruction>
<instruction Op_Code="noop" Type="I" Hex_Representation="0x2A"></instruction>
<instruction Op_Code="on_break" Type="J" Hex_Representation="0x2B"></instruction>
<instruction Op_Code="on_false" Type="J" Hex_Representation="0x2C"></instruction>
<instruction Op_Code="on_null" Type="J" Hex_Representation="0x2D"></instruction>
<instruction Op_Code="on_true" Type="J" Hex_Representation="0x2E"></instruction>
<instruction Op_Code="rethrow" Type="J" Hex_Representation="0x2F"></instruction>
<instruction Op_Code="store" Type="I" Hex_Representation="0x30"></instruction>
<instruction Op_Code="store_now" Type="I" Hex_Representation="0x31"></instruction>
<instruction Op_Code="throw" Type="J" Hex_Representation="0x32"></instruction>
<instruction Op_Code="to_array" Type="R" Hex_Representation="0x33"></instruction>
<instruction Op_Code="try" Type="J" Hex_Representation="0x34"></instruction>
<instruction Op_Code="typeof" Type="J" Hex_Representation="0x35"></instruction>
<instruction Op_Code="while" Type="R" Hex_Representation="0x36"></instruction>
</isa>